/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.custmanager.view;

import com.custmanager.images.ImagesDir;
import com.custmanager.model.CustTableModel;
import com.custmanager.model.PurchaseTableModel;
import com.custmanager.model.ProdTableModel;
import com.custmanager.model.PurchaseRtnTableModel;
import com.custmanager.model.SaleRtnTableModel;
import com.custmanager.model.SalesManTableModel;
import com.custmanager.model.SalesTableModel;
import com.custmanager.model.SupTableModel;
import com.custmanager.model.UserTableModel;
import com.custmanager.renders.CustomerTableCellRenderer;
import java.awt.Color;
import java.awt.event.KeyListener;
import java.util.Observable;
import java.util.Observer;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Inderjit
 */
public class GeneralBillHelp extends GradientPanel implements Observer {

    private static final long serialVersionUID = 1L;
    private CustomerTableCellRenderer tableCellRenderer;

    /**
     * Creates new form ManagerHelp
     */
    public GeneralBillHelp() {
        this(new Color(0,195,143));
    }

    public GeneralBillHelp(Color color) {
        super(color);
        initComponents();
    }

    public void addKeyController(KeyListener generalKeyController) {
        searchField.addKeyListener(generalKeyController);
    }
    public void setTableColWidths () {
        tableHelp.getTableHeader().setReorderingAllowed(false);
        tableHelp.setColumnSelectionAllowed(false);
        tableHelp.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        searchField = new com.inder.customcomponents.ITextField(35);
        jScrollPane1 = new javax.swing.JScrollPane();
        tableHelp = new javax.swing.JTable();

        setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setIcon(ImagesDir.getImage("search.png"));
        jLabel1.setText("Search  Bills");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(jLabel1, gridBagConstraints);

        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(searchField, gridBagConstraints);

        tableHelp.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 149, 234), 2, true));
        tableHelp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tableHelp);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 337;
        gridBagConstraints.ipady = 201;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(7, 12, 13, 12);
        add(jScrollPane1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    public com.inder.customcomponents.ITextField searchField;
    public javax.swing.JTable tableHelp;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
//            System.out.println("Updating " + arg.toString());
        if (arg instanceof PurchaseTableModel) {
            this.tableHelp.setModel((PurchaseTableModel) arg);
        } else if (arg instanceof SupTableModel) {
            this.tableHelp.setModel((SupTableModel) arg);
        } else if (arg instanceof SalesManTableModel) {
            this.tableHelp.setModel((SalesManTableModel) arg);
        } else if (arg instanceof ProdTableModel) {
            this.tableHelp.setModel((ProdTableModel) arg);
        } else if (arg instanceof SalesTableModel) {
            this.tableHelp.setModel((SalesTableModel) arg);
        } else if (arg instanceof CustTableModel) {
            this.tableHelp.setModel((CustTableModel) arg);
        } else if (arg instanceof PurchaseRtnTableModel) {
            this.tableHelp.setModel((PurchaseRtnTableModel) arg);
        } else if (arg instanceof SaleRtnTableModel) {
            this.tableHelp.setModel((SaleRtnTableModel) arg);
        } else if (arg instanceof UserTableModel) {
            this.tableHelp.setModel((UserTableModel) arg);
        }


    }

    /**
     * @return the tableCellRenderer
     */
    public CustomerTableCellRenderer getTableCellRenderer() {
        return tableCellRenderer;
    }

    /**
     * @param tableCellRenderer the tableCellRenderer to set
     */
    public void setTableCellRenderer(CustomerTableCellRenderer tableCellRenderer) {
        this.tableCellRenderer = tableCellRenderer;
        for (int colCount = 0; colCount < this.tableHelp.getColumnCount(); colCount++) {
            this.tableHelp.getColumnModel().getColumn(colCount).setCellRenderer(tableCellRenderer);
        }

    }

}
