/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.custmanager.view;

import com.cust.domain.vo.ElegantUser;
import com.cust.domain.vo.ElegantUserActivation;
import com.cust.persistance.managers.LoginManager;
import com.custmanager.AppManager;
import com.custmanager.CustFrame;
import com.custmanager.images.ImagesDir;
import com.custmanager.inputverifiers.CustomerInputVerifier;
import com.custmanager.util.CustUtil;
import com.custmanager.util.EmailValidator;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Base64;
import java.util.Date;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;
import javax.swing.text.PlainDocument;

/**
 *
 * @author Inderjit
 */
public class RegistrationView extends AbstractViewDialog {

    private static final long serialVersionUID = 1L;
    ElegantUserActivation userActivation = new ElegantUserActivation();

    /**
     * Creates new form Registration
     *
     * @param color
     */
    public RegistrationView(CustFrame parent, boolean modal) {
        super(parent, modal);
        super.setResizable(false);
        super.setTitle(CustUtil.APPNAME + " - " + "Request New User Window");
        initComponents();
        init();
        userActivation.setCompID(9999);
        userActivation.setUserID(0);

    }

    public RegistrationView() {
        this(new CustFrame(), true);
    }

    private void init() {
        super.setIconImage(ImagesDir.getImage("elegant.png").getImage());
        createButton.setIcon(ImagesDir.getImage("ok.png"));
        cancelButton.setIcon(ImagesDir.getImage("cancel.png"));
        cancelExitButton.setIcon(ImagesDir.getImage("exit.png"));
//        super.rootPane.setDefaultButton(createButton);
        PlainDocument document = (PlainDocument) passWordField.getDocument();
        document.setDocumentFilter(new DocumentFilter() {

            @Override
            public void replace(DocumentFilter.FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                String string = fb.getDocument().getText(0, fb.getDocument().getLength()) + text;

                if (string.length() <= 30) {
                    super.replace(fb, offset, length, text, attrs);
                }
            }
        });
        verificationLabel.setEnabled(false);
        verificationField.setEnabled(false);
        emailField.setAllowSpaceSymbol(false);
        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        loginNameField = new com.inder.customcomponents.ITextField(35);
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nameField = new com.inder.customcomponents.ITextField(35);
        jLabel4 = new javax.swing.JLabel();
        addressField = new com.inder.customcomponents.ITextField(100);
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cityField = new com.inder.customcomponents.ITextField(35);
        stateField = new com.inder.customcomponents.ITextField(35);
        zipField = new com.inder.customcomponents.INumberField(10,com.inder.customcomponents.INumberField.NUMERIC);
        telField = new com.inder.customcomponents.INumberField(10,com.inder.customcomponents.INumberField.NUMERIC);
        jLabel9 = new javax.swing.JLabel();
        mobField = new com.inder.customcomponents.INumberField(15,com.inder.customcomponents.INumberField.NUMERIC);
        jLabel10 = new javax.swing.JLabel();
        countryField = new com.inder.customcomponents.ITextField(30);
        createButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        cancelExitButton = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();
        passWordField = new javax.swing.JPasswordField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        emailField = new com.inder.customcomponents.ITextField(35,false,true,true);
        verificationLabel = new javax.swing.JLabel();
        verificationField = new javax.swing.JTextField();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("Enter Login ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(jLabel1, gridBagConstraints);

        loginNameField.setInputVerifier(new CustomerInputVerifier());
        loginNameField.setMinimumSize(new java.awt.Dimension(100, 22));
        loginNameField.setName("loginNameField"); // NOI18N
        loginNameField.setPreferredSize(new java.awt.Dimension(100, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 100);
        getContentPane().add(loginNameField, gridBagConstraints);

        jLabel2.setDisplayedMnemonic('p');
        jLabel2.setForeground(new java.awt.Color(51, 51, 255));
        jLabel2.setText("Enter PassPhrase");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(jLabel2, gridBagConstraints);

        jLabel3.setDisplayedMnemonic('g');
        jLabel3.setText("Given Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(jLabel3, gridBagConstraints);

        nameField.setMinimumSize(new java.awt.Dimension(400, 22));
        nameField.setName("nameField"); // NOI18N
        nameField.setPreferredSize(new java.awt.Dimension(400, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(nameField, gridBagConstraints);

        jLabel4.setDisplayedMnemonic('r');
        jLabel4.setText("Res-Address");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(jLabel4, gridBagConstraints);

        addressField.setInheritsPopupMenu(true);
        addressField.setName("addressField"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 19;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(addressField, gridBagConstraints);

        jLabel5.setDisplayedMnemonic('c');
        jLabel5.setText("City Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(jLabel5, gridBagConstraints);

        jLabel6.setDisplayedMnemonic('s');
        jLabel6.setText("Territory-State ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(jLabel6, gridBagConstraints);

        jLabel7.setDisplayedMnemonic('z');
        jLabel7.setText("Zip Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(jLabel7, gridBagConstraints);

        jLabel8.setDisplayedMnemonic('t');
        jLabel8.setText("Tel No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(jLabel8, gridBagConstraints);

        cityField.setMaximumSize(new java.awt.Dimension(100, 22));
        cityField.setMinimumSize(new java.awt.Dimension(100, 22));
        cityField.setName("addressField"); // NOI18N
        cityField.setPreferredSize(new java.awt.Dimension(100, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 100);
        getContentPane().add(cityField, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 100);
        getContentPane().add(stateField, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 150);
        getContentPane().add(zipField, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 150);
        getContentPane().add(telField, gridBagConstraints);

        jLabel9.setDisplayedMnemonic('b');
        jLabel9.setForeground(new java.awt.Color(51, 51, 255));
        jLabel9.setText("Mobile No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(jLabel9, gridBagConstraints);

        mobField.setInputVerifier(new CustomerInputVerifier());
        mobField.setName("mobField"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(mobField, gridBagConstraints);

        jLabel10.setDisplayedMnemonic('y');
        jLabel10.setText("Country Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 22;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(jLabel10, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 22;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(countryField, gridBagConstraints);

        createButton.setMnemonic('u');
        createButton.setText("Submit");
        createButton.setPreferredSize(new java.awt.Dimension(125, 25));
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 24;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(createButton, gridBagConstraints);

        cancelButton.setMnemonic('c');
        cancelButton.setText("Cancel");
        cancelButton.setPreferredSize(new java.awt.Dimension(125, 25));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 24;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(cancelButton, gridBagConstraints);

        cancelExitButton.setMnemonic('x');
        cancelExitButton.setText("Exit");
        cancelExitButton.setPreferredSize(new java.awt.Dimension(125, 25));
        cancelExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelExitButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 24;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(cancelExitButton, gridBagConstraints);

        errorLabel.setMaximumSize(new java.awt.Dimension(200, 22));
        errorLabel.setMinimumSize(new java.awt.Dimension(200, 22));
        errorLabel.setName(""); // NOI18N
        errorLabel.setPreferredSize(new java.awt.Dimension(200, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 20;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(errorLabel, gridBagConstraints);

        passWordField.setInputVerifier(new CustomerInputVerifier());
        passWordField.setName("passWordField"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(passWordField, gridBagConstraints);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 153, 51));
        jLabel11.setText("Please Enter Info Below and click Send Request Button [Fields in Blue are manditory]");
        jLabel11.setMinimumSize(new java.awt.Dimension(100, 22));
        jLabel11.setPreferredSize(new java.awt.Dimension(100, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 20;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(jLabel11, gridBagConstraints);

        jLabel12.setDisplayedMnemonic('e');
        jLabel12.setForeground(new java.awt.Color(51, 51, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Email Id");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(jLabel12, gridBagConstraints);

        emailField.setInputVerifier(new CustomerInputVerifier());
        emailField.setName("emailField"); // NOI18N
        emailField.setPreferredSize(new java.awt.Dimension(200, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 13;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(emailField, gridBagConstraints);

        verificationLabel.setText("Verification Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 22;
        getContentPane().add(verificationLabel, gridBagConstraints);

        verificationField.setMinimumSize(new java.awt.Dimension(100, 22));
        verificationField.setPreferredSize(new java.awt.Dimension(100, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 22;
        getContentPane().add(verificationField, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed

        if (this.loginNameField.getText().equals("") || this.passWordField.getPassword().length == 0) {
            errorLabel.setForeground(Color.red);
            errorLabel.setText("Please Enter User Name & Password");
            if (this.passWordField.getPassword().length == 0) {
                this.passWordField.requestFocus();
            } else {
                this.loginNameField.requestFocus();
            }
            return;
        }
        EmailValidator emailValidator = new EmailValidator();
        boolean validated = (this.emailField.getText().length() != 0 ? emailValidator.validate(this.emailField.getText()) : false);
        if (!validated) {
            errorLabel.setForeground(Color.red);
            errorLabel.setText("Please Enter a valid Email-Id");
            this.emailField.requestFocus();
            return;
        }
        if (this.mobField.getText().length() == 0) {
            errorLabel.setForeground(Color.red);
            errorLabel.setText("Please Enter a valid Mobile No");
            this.mobField.requestFocus();
            return;
        }
        try {
            InternetAddress address = new InternetAddress(this.emailField.getText());
            address.validate();
            validateUser();
            if (userActivation.getUserActivation() != null) {
                verificationLabel.setEnabled(true);
                verificationField.setEnabled(true);

                errorLabel.setForeground(Color.BLUE);
                errorLabel.setText("Please Enter the verification code sent to your email and click submit again.");

            }
            errorLabel.setText("");
            System.out.println(userActivation.getUserActivation() + " - " + verificationField.getText() + " - " + userActivation.getUserActivation().equalsIgnoreCase(verificationField.getText()));
            if (userActivation.getUserActivation() != null && userActivation.getUserActivation().equalsIgnoreCase(verificationField.getText())) {
                saveUserRegistration();
            } else {
                errorLabel.setForeground(Color.BLUE);
                errorLabel.setText("Invalid verification code entered. Please retry");

            }
        } catch (AddressException e) {
            errorLabel.setForeground(Color.red);
            errorLabel.setText("This Email Address or Email Domain does not Exist");
        } catch (Exception e) {
            e.printStackTrace();
//            CustUtil.showErrorDialogue(e.getMessage());
        }
    }//GEN-LAST:event_createButtonActionPerformed

    void validateUser() {
        try {
            LoginManager loginManager = (LoginManager) AppManager.getInstance().getViewManagerList().get("regManager");
            if (loginManager==null) System.out.println("Could not find manager");
            loginManager.getPreferenceList();
            ArrayList<ElegantUser> userList = loginManager.getUserByEmail(this.emailField.getText());
            ArrayList<ElegantUserActivation> userActivationList = new ArrayList<ElegantUserActivation>();
            if (userList != null && !userList.isEmpty()) {
                errorLabel.setForeground(Color.red);
                errorLabel.setText("Email Address Already Exist or is Registered");
                return;
            }
            userList = loginManager.getUserByName(this.loginNameField.getText());
            if (userList != null && !userList.isEmpty()) {
                errorLabel.setForeground(Color.red);
                errorLabel.setText("User Name Already Exist or is Registered");
                return;
            }
            userList = loginManager.getUserByMobile(this.mobField.getText());
            if (userList != null && !userList.isEmpty()) {
                errorLabel.setForeground(Color.red);
                errorLabel.setText("Mobile No Already Exist or is Registered");
                return;
            }
            if (userActivation.getUserActivation() == null || userActivation.getUserActivation() == "") {
                userActivationList.add(userActivation);
                userActivationList = loginManager.getUserActivation(userActivationList, this.emailField.getText());
                userActivation = userActivationList.get(0);
            }
        } catch (Exception e) {
            e.printStackTrace();
//            CustUtil.showErrorDialogue(e.getMessage());
        }
    }

    void saveUserRegistration() {
        ArrayList<ElegantUser> userList = new ArrayList<ElegantUser>();
        LoginManager loginManager = (LoginManager) AppManager.getInstance().getViewManagerList().get("regManager");

        ElegantUser user = new ElegantUser();
        fillInfo(user);
        userList.add(user);
        loginManager.saveUserList(userList, true);
        LoginView loginForm = AppManager.getLoginView();
        loginForm.errorLabel.setForeground(Color.green);
        loginForm.errorLabel.setText("Evaluation User Created");
        dispose();

    }

    void fillInfo(ElegantUser user) {
        user.setCompID(userActivation.getCompID());
        user.setUserID(userActivation.getUserID());
        user.setEmailId(this.emailField.getText());
        user.setUserLoginName(this.loginNameField.getText());
        user.setUserLoginPwd(new String(Base64.getEncoder().encode(this.passWordField.getText().getBytes())));
        user.setUserName(this.nameField.getText());
        user.setUserAddress(this.addressField.getText());
        user.setState(this.stateField.getText());
        if (this.zipField.getText().length() > 0) {
            user.setPinCode(Integer.parseInt(this.zipField.getText()));
        }
        user.setCountry(this.countryField.getText());
        if (this.telField.getText().length() > 0) {
            user.setTelephoneNo(this.telField.getText());
        }
        user.setMobileNo(this.mobField.getText());
        user.setAccountStatus(0);
        user.setAccountType(0);
        user.setMembershipDate(new Date());
        user.setGracePeriod(30);
    }
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void cancelExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelExitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_cancelExitButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public com.inder.customcomponents.ITextField addressField;
    public javax.swing.JButton cancelButton;
    public javax.swing.JButton cancelExitButton;
    public com.inder.customcomponents.ITextField cityField;
    public com.inder.customcomponents.ITextField countryField;
    public javax.swing.JButton createButton;
    public com.inder.customcomponents.ITextField emailField;
    public javax.swing.JLabel errorLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public com.inder.customcomponents.ITextField loginNameField;
    public com.inder.customcomponents.INumberField mobField;
    public com.inder.customcomponents.ITextField nameField;
    public javax.swing.JPasswordField passWordField;
    public com.inder.customcomponents.ITextField stateField;
    public com.inder.customcomponents.INumberField telField;
    public javax.swing.JTextField verificationField;
    public javax.swing.JLabel verificationLabel;
    public com.inder.customcomponents.INumberField zipField;
    // End of variables declaration//GEN-END:variables

    @Override
    void updateFieldsOnView() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
